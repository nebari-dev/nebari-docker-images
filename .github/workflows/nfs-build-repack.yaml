# Repack and publish volume-nfs to GHCR + Quay with metadata-action tags
name: Repack volume-nfs with updated schema

on:
  workflow_dispatch: {}
  push:
    branches:
      - "*"
    tags:
      - "*"

env:
  # source image to repack (schema v1 -> v2/OCI)
  SOURCE_IMAGE: gcr.io/google_containers/volume-nfs:0.8
  DOCKER_ORG: nebari
  IMAGE_SUFFIX: -repack
  VALID_TYPES: "application/vnd.oci.image.manifest.v1+json application/vnd.docker.distribution.manifest.v2+json"

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  repack-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout üõéÔ∏è"
        uses: actions/checkout@v4

      - name: "Install skopeo+jq üß∞"
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo jq

      - name: "Login to GHCR üîê"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BOT_GHCR_TOKEN }}

      - name: "Login to Quay üîê"
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: "Generate image tags üè∑Ô∏è"
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            quay.io/${{ env.DOCKER_ORG }}/volume-nfs${{ env.IMAGE_SUFFIX }}
            ghcr.io/${{ github.repository_owner }}/volume-nfs${{ env.IMAGE_SUFFIX }}
          tags: |
            # branch event -> e.g. main-f0f6994-20251020
            type=ref, event=branch, suffix=-{{sha}}-{{date 'YYYYMMDD'}}
            # plain branch tag for integration tests -> e.g. main
            type=ref, event=branch
            # on tag push -> e.g. 2025.10.1
            type=ref, event=tag

      - name: "Show target tags to be published üîé"
        run: |
          echo "Will publish to the following targets:"
          echo "${{ steps.meta.outputs.tags }}" | sed 's/^/  - /'

      - name: "Repack & Push (skopeo copy -> GHCR/Quay) üê≥"
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          SRC: ${{ env.SOURCE_IMAGE }}
        run: |
          set -euo pipefail
          IFS=$'\n'
          for DEST in $TAGS; do
            echo "Repacking: ${SRC}  ==>  ${DEST}"
            # Convert to OCI manifest (or docker schema v2 if registry chooses) and push
            skopeo copy \
              --insecure-policy \
              --format oci \
              "docker://${SRC}" \
              "docker://${DEST}"

            echo "Verifying manifest schema for ${DEST}"
            MT=$(skopeo inspect --raw "docker://${DEST}" | jq -r '.mediaType // .manifests[0].mediaType')
            echo "  Detected mediaType: ${MT}"

            ok=false
            for vt in ${VALID_TYPES}; do
              if [ "${MT}" = "${vt}" ]; then ok=true; fi
            done

            if [ "${ok}" != "true" ]; then
              echo "‚ùå Image manifest schema is not OCI or Docker schema v2. Got: ${MT}"
              exit 1
            fi
            echo "‚úÖ Schema OK for ${DEST}"
          done

      - name: "Summary"
        run: |
          echo "Successfully repacked ${SOURCE_IMAGE} to:"
          echo "${{ steps.meta.outputs.tags }}"
