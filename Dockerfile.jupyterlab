# Copyright (c) Nebari Development Team.
# Distributed under the terms of the Modified BSD License.
# Usage:
# ------
#
# To make a local build of the container, from the root directory:
# docker build -f Dockerfile.jupyterlab -t nebari-jupyterlab:latest .

ARG BASE_IMAGE=ubuntu:20.04
FROM $BASE_IMAGE
LABEL MAINTAINER="Nebari development team"

COPY jupyterlab /opt/jupyterlab
COPY scripts /opt/scripts

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
RUN chmod -R a-w ~
RUN /opt/scripts/install-apt-minimal.sh

SHELL ["/bin/bash", "-c"]
ENV DEFAULT_ENV=default
# Set timezone
ENV TZ=America/Chicago
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Set PATH for Dockerfile so that some useful scripts are
# available. Any changes intended to propagate to runtime containers should be
# set in /etc/profile.d (see setup_shell_behavior.sh)
ENV PATH=/opt/jupyterlab/.pixi/envs/${DEFAULT_ENV}/bin:/opt/scripts:${PATH}

# ========== Install Pixi ============
RUN curl -fsSL https://pixi.sh/install.sh | bash
ENV PATH=~/.pixi/bin:${PATH}

# ========== jupyterlab install ============
RUN /opt/scripts/install-apt.sh /opt/jupyterlab/apt.txt

# Install extra packages (require custom package repository)
RUN /opt/scripts/install-gitlfs.sh

# Install environment using Pixi
RUN pixi install --manifest-path /opt/jupyterlab/ --locked 
RUN pixi shell-hook --manifest-path /opt/jupyterlab/ -s bash > /shell-hook
RUN echo "#!/bin/bash" > /opt/entrypoint.sh
RUN cat /shell-hook >> /opt/entrypoint.sh
RUN echo 'exec "$@"' >> /opt/entrypoint.sh

# ========== code-server install ============
ENV PATH=/opt/jupyterlab/.pixi/envs/${DEFAULT_ENV}/share/code-server/bin:${PATH}
RUN /opt/jupyterlab/postBuild

# ========== Setup GPU Paths ============
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64
ENV NVIDIA_PATH=/usr/local/nvidia/bin
ENV PATH="$NVIDIA_PATH:$PATH"
