# Copyright (c) Nebari Development Team.
# Distributed under the terms of the Modified BSD License.
# Usage:
# ------
#
# To make a local build of the container, from the root directory:
# docker build -f Dockerfile.workflow-controller -t nebari-workflow-controller:latest .

ARG BASE_IMAGE=ubuntu:20.04
FROM $BASE_IMAGE
LABEL MAINTAINER="Nebari development team"

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
RUN chmod -R a-w ~
COPY scripts/install-apt-minimal.sh /opt/scripts/install-apt-minimal.sh
RUN /opt/scripts/install-apt-minimal.sh

COPY scripts/fix-permissions /opt/scripts/fix-permissions

SHELL ["/bin/bash", "-c"]
ENV DEFAULT_ENV=default
# Set timezone
ENV TZ=America/Chicago
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Set PATH for Dockerfile so that conda works and some useful scripts are
# available. Any changes intended to propagate to runtime containers should be
# set in /etc/profile.d (see setup_shell_behavior.sh)
ENV PATH=/opt/nebari-workflow-controller/.pixi/envs/${DEFAULT_ENV}/bin:/opt/scripts:${PATH}

# ========== Install Pixi ============
RUN curl -fsSL https://pixi.sh/install.sh | bash
ENV PATH=~/.pixi/bin:${PATH}

# ========== nebari-workflow-controller install ============
COPY scripts/install-apt.sh /opt/scripts/install-apt.sh
COPY nebari-workflow-controller/apt.txt /opt/nebari-workflow-controller/apt.txt
RUN /opt/scripts/install-apt.sh

# uncomment to install dev dependencies
# RUN /opt/scripts/install-apt.sh /opt/nebari-workflow-controller/apt.txt  

# ========== nebari-workflow-controller install ===========
COPY nebari-workflow-controller/pixi.toml /opt/nebari-workflow-controller/pixi.toml
COPY nebari-workflow-controller/pixi.lock /opt/nebari-workflow-controller/pixi.lock
RUN pixi install --manifest-path /opt/nebari-workflow-controller/ --locked

CMD ["python", "-m", "nebari_workflow_controller"]
